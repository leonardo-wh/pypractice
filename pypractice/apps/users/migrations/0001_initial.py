# Generated by Django 4.2.16 on 2024-12-07 17:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields
import pypractice.apps.users.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('avatar', models.ImageField(upload_to='usuarios/%Y/%m/')),
                ('address', models.TextField(blank=True, verbose_name='Dirección')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Teléfono celular')),
                ('rfc', models.CharField(blank=True, max_length=30, verbose_name='RFC/RUC/NIT')),
                ('legal_name', models.CharField(blank=True, max_length=255, verbose_name='Nombre facturación')),
                ('tax_id', models.CharField(blank=True, max_length=30, verbose_name='RFC/RUC')),
                ('tax_system', models.CharField(blank=True, max_length=10, null=True, verbose_name='Regimen fiscal')),
                ('postal_code', models.CharField(blank=True, max_length=50, verbose_name='Código postal')),
                ('billing_address', models.TextField(blank=True, max_length=100, verbose_name='Dirección de facturación')),
                ('billing_email', models.EmailField(blank=True, max_length=254, verbose_name='Email de facturación')),
                ('district', models.CharField(blank=True, max_length=50, verbose_name='Localidad/Barrio/Departamento')),
                ('city', models.CharField(blank=True, max_length=50, verbose_name='Ciudad/Municipio')),
                ('license', models.CharField(blank=True, max_length=35, verbose_name='Licencia DNI/C.I./C.C.')),
            ],
            options={
                'ordering': ('-id',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClientStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70, verbose_name='Nombre')),
                ('class_css', models.CharField(max_length=40, verbose_name='Class ccs color')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Estado Clientes',
                'verbose_name_plural': 'Estado Clientes',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PlanEmpresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('precio_sin_iva', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('mostrar', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
            ],
            options={
                'verbose_name': 'Plan',
                'verbose_name_plural': 'Planes',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity_in_stock', models.PositiveIntegerField()),
                ('category', models.CharField(choices=[('Amplifier', 'Amplificador'), ('Guitar', 'Guitarra'), ('Drums', 'Batería'), ('Pick', 'Plumilla'), ('Audio Interface', 'Interfaz de Audio'), ('Accessory', 'Accesorio')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('contact_name', models.CharField(max_length=255)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=15)),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TipoPersona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Nombre')),
            ],
        ),
        migrations.CreateModel(
            name='TipoUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Nombre')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='users.supplier'),
        ),
        migrations.CreateModel(
            name='InventoryMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('movement_type', models.CharField(choices=[('purchase', 'Compra'), ('sale', 'Venta'), ('return', 'Devolución')], max_length=20)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.product')),
            ],
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='Identificador de empresa')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('nombre', models.CharField(max_length=80, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('direccion', models.TextField(blank=True, max_length=100)),
                ('telefono', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Teléfono')),
                ('pais', django_countries.fields.CountryField(max_length=2)),
                ('detalles', models.TextField(blank=True, verbose_name='Detalles')),
                ('logo', models.ImageField(upload_to=pypractice.apps.users.models.Empresa.logo_path)),
                ('estado', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Activo'), (2, 'Suspendido'), (3, 'Cancelado')], default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('fecha_contratacion', models.DateTimeField(blank=True, null=True)),
                ('fecha_suspension', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Suspension')),
                ('nombre_facturacion', models.CharField(blank=True, max_length=255)),
                ('rfc', models.CharField(blank=True, max_length=30, verbose_name='RFC/RUC')),
                ('regimen_fiscal', models.CharField(blank=True, max_length=10, null=True)),
                ('codigo_postal', models.CharField(blank=True, max_length=50)),
                ('direccion_facturacion', models.TextField(blank=True, max_length=100)),
                ('email_facturacion', models.EmailField(blank=True, max_length=254)),
                ('timezone', models.CharField(default='Etc/UTC', max_length=190)),
                ('external_id', models.PositiveIntegerField(blank=True, db_index=True, null=True, verbose_name='Id externo del lote al que pertenece')),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='empresa_plan_empresa', to='users.planempresa')),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
                'permissions': {('ver_perfil_financiero', 'Ver perfil financiero'), ('acciones_lista_empresas', 'Acciones lista de empresas'), ('eliminar_superusuarios', 'Eliminar super usuarios'), ('lista_empresas', 'Lista de empresas'), ('crear_superusuarios', 'Crear super usuarios')},
            },
        ),
        migrations.AddField(
            model_name='user',
            name='company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_user', to='users.empresa', verbose_name='Empresa'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='person_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person_type_user', to='users.tipopersona', verbose_name='Tipo de persona'),
        ),
        migrations.AddField(
            model_name='user',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_status', to='users.clientstatus', verbose_name='Estatus'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_type_user', to='users.tipousuario', verbose_name='Tipo de usuario'),
        ),
    ]
