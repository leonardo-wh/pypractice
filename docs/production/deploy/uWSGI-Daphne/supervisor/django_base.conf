; ================================
;  celery Flower
; ================================

; the name of your supervisord program
[program:cFlower]

;Variable para leer las variables produccion de entorno de nuestro archivo .env /home/DjangoBase_Server/pypractice/.config/environment/production
environment=pypractice_ENVIRON=production

; Set full path to celery program if using virtualenv
command=/var/waps/entornos/pypractice-iuZVJFYy/bin/celery -A pypractice.core flower --port=6655 --broker=redis://localhost:6379 --auto_refresh=True --basic_auth=servicios:servicios@pypractice

; The directory to your Django project
directory=/home/DjangoBase_Server/pypractice/

; If supervisord is run as the root user, switch users to this UNIX user account
; before doing any processing.
user=celery

; Supervisor will start as many instances of this program as named by numprocs
numprocs=1

; Put process stdout output in this file
stderr_logfile=/home/DjangoBase_Server/pypractice/.logs/celery/pypractice_flower.log

; Put process stderr output in this file
stderr_logfile=/home/DjangoBase_Server/pypractice/.logs/celery/pypractice_flower_error.log

; If true, this program will start automaticalnginx
; May be one of false, unexpected, or true. If false, the process will never
; be autorestarted. If unexpected, the process will be restart when the program
; exits with an exit code that is not one of the exit codes associated with this
; processï¿½ configuration (see exitcodes). If true, the process will be
; unconditionally restarted when it exits, without regard to its exit code.
autorestart=true

; ==================================
;  celery Worker
; ==================================

; the name of your supervisord program
[program:cpypracticeWorker]

;Variable para leer las variables produccion de entorno de nuestro archivo .env /home/DjangoBase_Server/pypractice/.config/environment/production
environment=pypractice_ENVIRON=production

; Set full path to celery program if using virtualenv
command=/var/waps/entornos/pypractice-iuZVJFYy/bin/celery -A pypractice.core worker --loglevel=INFO -Ofair --concurrency=2

; The directory to your Django project
directory=/home/DjangoBase_Server/pypractice/

user=celery
numprocs=1

stdout_logfile=/home/DjangoBase_Server/pypractice/.logs/celery/pypractice_worker.log
stderr_logfile=/home/DjangoBase_Server/pypractice/.logs/celery/pypractice_worker_error.log

autostart=true
autorestart=true

startsecs=10
stopwaitsecs = 600

killasgroup=true
priority=992

; ==================================
;  celery pypractice Worker
; ==================================

; the name of your supervisord program
[program:cpypractice]

;Variable para leer las variables produccion de entorno de nuestro archivo .env /home/DjangoBase_Server/pypractice/.config/environment/production
environment=pypractice_ENVIRON=production

; Set full path to celery program if using virtualenv
command=/var/waps/entornos/pypractice-iuZVJFYy/bin/celery -A pypractice.core worker -Q pypractice -n pypractice@worker -l INFO -E

; The directory to your Django project
directory=/home/DjangoBase_Server/pypractice/

user=celery_pypractice
numprocs=1

stdout_logfile=/home/DjangoBase_Server/pypractice/.logs/celery/pypractice.log
stderr_logfile=/home/DjangoBase_Server/pypractice/.logs/celery/pypractice_error.log

autostart=true
autorestart=true

startsecs=10
stopwaitsecs = 600

killasgroup=true
priority=992